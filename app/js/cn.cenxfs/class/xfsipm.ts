/// <reference path="xfsapi.ts"/>

/**
 * IPM 命令
 * @namespace
*/
namespace IPM {
    const WFS_SERVICE_CLASS_IPM              = (16);
    const WFS_SERVICE_CLASS_VERSION_IPM      = (0x1E03) /* Version 3.30 */;
    const WFS_SERVICE_CLASS_NAME_IPM         = "IPM";

    const IPM_SERVICE_OFFSET                 = (WFS_SERVICE_CLASS_IPM * 100)    ;

    /* IPM Info Commands */
    export enum INF {
        WFS_INF_IPM_STATUS                 = (IPM_SERVICE_OFFSET + 1),
        WFS_INF_IPM_CAPABILITIES           = (IPM_SERVICE_OFFSET + 2),
        WFS_INF_IPM_CODELINE_MAPPING       = (IPM_SERVICE_OFFSET + 3),
        WFS_INF_IPM_MEDIA_BIN_INFO         = (IPM_SERVICE_OFFSET + 4),
        WFS_INF_IPM_TRANSACTION_STATUS     = (IPM_SERVICE_OFFSET + 5),
        WFS_INF_IPM_MEDIA_BIN_CAPABILITIES = (IPM_SERVICE_OFFSET + 6)        ,
    }

    /* IPM Execute Commands */
    export enum CMD {
        WFS_CMD_IPM_MEDIA_IN               = (IPM_SERVICE_OFFSET + 1),
        WFS_CMD_IPM_MEDIA_IN_END           = (IPM_SERVICE_OFFSET + 2),
        WFS_CMD_IPM_MEDIA_IN_ROLLBACK      = (IPM_SERVICE_OFFSET + 3),
        WFS_CMD_IPM_READ_IMAGE             = (IPM_SERVICE_OFFSET + 4),
        WFS_CMD_IPM_SET_DESTINATION        = (IPM_SERVICE_OFFSET + 5),
        WFS_CMD_IPM_PRESENT_MEDIA          = (IPM_SERVICE_OFFSET + 6),
        WFS_CMD_IPM_RETRACT_MEDIA          = (IPM_SERVICE_OFFSET + 7),
        WFS_CMD_IPM_PRINT_TEXT             = (IPM_SERVICE_OFFSET + 8),
        WFS_CMD_IPM_SET_MEDIA_BIN_INFO     = (IPM_SERVICE_OFFSET + 9),
        WFS_CMD_IPM_RESET                  = (IPM_SERVICE_OFFSET + 10),
        WFS_CMD_IPM_SET_GUIDANCE_LIGHT     = (IPM_SERVICE_OFFSET + 11),
        WFS_CMD_IPM_GET_NEXT_ITEM          = (IPM_SERVICE_OFFSET + 12),
        WFS_CMD_IPM_ACTION_ITEM            = (IPM_SERVICE_OFFSET + 13),
        WFS_CMD_IPM_EXPEL_MEDIA            = (IPM_SERVICE_OFFSET + 14),
        WFS_CMD_IPM_GET_IMAGE_AFTER_PRINT  = (IPM_SERVICE_OFFSET + 15),
        WFS_CMD_IPM_ACCEPT_ITEM            = (IPM_SERVICE_OFFSET + 16),
        WFS_CMD_IPM_SUPPLY_REPLENISH       = (IPM_SERVICE_OFFSET + 17),
        WFS_CMD_IPM_POWER_SAVE_CONTROL     = (IPM_SERVICE_OFFSET + 18),
        WFS_CMD_IPM_SET_MODE               = (IPM_SERVICE_OFFSET + 19),
        WFS_CMD_IPM_SYNCHRONIZE_COMMAND    = (IPM_SERVICE_OFFSET + 20)        ,
    }

    /* IPM Messages */
    export enum EVENT {
        WFS_EXEE_IPM_NOMEDIA               = (IPM_SERVICE_OFFSET + 1),
        WFS_EXEE_IPM_MEDIAINSERTED         = (IPM_SERVICE_OFFSET + 2),
        WFS_USRE_IPM_MEDIABINTHRESHOLD     = (IPM_SERVICE_OFFSET + 3),
        WFS_SRVE_IPM_MEDIABININFOCHANGED   = (IPM_SERVICE_OFFSET + 4),
        WFS_EXEE_IPM_MEDIABINERROR         = (IPM_SERVICE_OFFSET + 5),
        WFS_SRVE_IPM_MEDIATAKEN            = (IPM_SERVICE_OFFSET + 6),
        WFS_USRE_IPM_TONERTHRESHOLD        = (IPM_SERVICE_OFFSET + 7),
        WFS_USRE_IPM_SCANNERTHRESHOLD      = (IPM_SERVICE_OFFSET + 8),
        WFS_USRE_IPM_INKTHRESHOLD          = (IPM_SERVICE_OFFSET + 9),
        WFS_SRVE_IPM_MEDIADETECTED         = (IPM_SERVICE_OFFSET + 10),
        WFS_EXEE_IPM_MEDIAPRESENTED        = (IPM_SERVICE_OFFSET + 11),
        WFS_EXEE_IPM_MEDIAREFUSED          = (IPM_SERVICE_OFFSET + 12),
        WFS_EXEE_IPM_MEDIADATA             = (IPM_SERVICE_OFFSET + 13),
        WFS_USRE_IPM_MICRTHRESHOLD         = (IPM_SERVICE_OFFSET + 14),
        WFS_EXEE_IPM_MEDIAREJECTED         = (IPM_SERVICE_OFFSET + 15),
        WFS_SRVE_IPM_DEVICEPOSITION        = (IPM_SERVICE_OFFSET + 16),
        WFS_SRVE_IPM_POWER_SAVE_CHANGE     = (IPM_SERVICE_OFFSET + 17),
        WFS_SRVE_IPM_SHUTTERSTATUSCHANGED  = (IPM_SERVICE_OFFSET + 18),
    }
}