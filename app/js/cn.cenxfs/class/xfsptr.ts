/// <reference path="xfsapi.ts"/>

/**
 * PTR 命令
 * @namespace
*/
namespace PTR {
    const WFS_SERVICE_CLASS_PTR         =     (1);
    const WFS_SERVICE_CLASS_VERSION_PTR =    (0x1E03) /* Version 3.30 */;
    const WFS_SERVICE_CLASS_NAME_PTR    =    "PTR";

    const PTR_SERVICE_OFFSET            =    (WFS_SERVICE_CLASS_PTR * 100);

    /* PTR Info Commands */
    export enum INF {
        WFS_INF_PTR_STATUS               = (PTR_SERVICE_OFFSET + 1),
        WFS_INF_PTR_CAPABILITIES         = (PTR_SERVICE_OFFSET + 2),
        WFS_INF_PTR_FORM_LIST            = (PTR_SERVICE_OFFSET + 3),
        WFS_INF_PTR_MEDIA_LIST           = (PTR_SERVICE_OFFSET + 4),
        WFS_INF_PTR_QUERY_FORM           = (PTR_SERVICE_OFFSET + 5),
        WFS_INF_PTR_QUERY_MEDIA          = (PTR_SERVICE_OFFSET + 6),
        WFS_INF_PTR_QUERY_FIELD          = (PTR_SERVICE_OFFSET + 7),
        WFS_INF_PTR_CODELINE_MAPPING     = (PTR_SERVICE_OFFSET + 8)
    }

    /* PTR Execute Commands */
    export enum CMD {
        WFS_CMD_PTR_CONTROL_MEDIA        = (PTR_SERVICE_OFFSET + 1),
        WFS_CMD_PTR_PRINT_FORM           = (PTR_SERVICE_OFFSET + 2),
        WFS_CMD_PTR_READ_FORM            = (PTR_SERVICE_OFFSET + 3),
        WFS_CMD_PTR_RAW_DATA             = (PTR_SERVICE_OFFSET + 4),
        WFS_CMD_PTR_MEDIA_EXTENTS        = (PTR_SERVICE_OFFSET + 5),
        WFS_CMD_PTR_RESET_COUNT          = (PTR_SERVICE_OFFSET + 6),
        WFS_CMD_PTR_READ_IMAGE           = (PTR_SERVICE_OFFSET + 7),
        WFS_CMD_PTR_RESET                = (PTR_SERVICE_OFFSET + 8),
        WFS_CMD_PTR_RETRACT_MEDIA        = (PTR_SERVICE_OFFSET + 9),
        WFS_CMD_PTR_DISPENSE_PAPER       = (PTR_SERVICE_OFFSET + 10),
        WFS_CMD_PTR_SET_GUIDANCE_LIGHT   = (PTR_SERVICE_OFFSET + 11),
        WFS_CMD_PTR_PRINT_RAW_FILE       = (PTR_SERVICE_OFFSET + 12),
        WFS_CMD_PTR_LOAD_DEFINITION      = (PTR_SERVICE_OFFSET + 13),
        WFS_CMD_PTR_SUPPLY_REPLENISH     = (PTR_SERVICE_OFFSET + 14),
        WFS_CMD_PTR_POWER_SAVE_CONTROL   = (PTR_SERVICE_OFFSET + 15),
        WFS_CMD_PTR_CONTROL_PASSBOOK     = (PTR_SERVICE_OFFSET + 16),
        WFS_CMD_PTR_SET_BLACK_MARK_MODE  = (PTR_SERVICE_OFFSET + 17),
        WFS_CMD_PTR_SYNCHRONIZE_COMMAND  = (PTR_SERVICE_OFFSET + 18)
    }

    /* PTR Messages */
    export enum EVENT {
        WFS_EXEE_PTR_NOMEDIA             = (PTR_SERVICE_OFFSET + 1),
        WFS_EXEE_PTR_MEDIAINSERTED       = (PTR_SERVICE_OFFSET + 2),
        WFS_EXEE_PTR_FIELDERROR          = (PTR_SERVICE_OFFSET + 3),
        WFS_EXEE_PTR_FIELDWARNING        = (PTR_SERVICE_OFFSET + 4),
        WFS_USRE_PTR_RETRACTBINTHRESHOLD = (PTR_SERVICE_OFFSET + 5),
        WFS_SRVE_PTR_MEDIATAKEN          = (PTR_SERVICE_OFFSET + 6),
        WFS_USRE_PTR_PAPERTHRESHOLD      = (PTR_SERVICE_OFFSET + 7),
        WFS_USRE_PTR_TONERTHRESHOLD      = (PTR_SERVICE_OFFSET + 8),
        WFS_SRVE_PTR_MEDIAINSERTED       = (PTR_SERVICE_OFFSET + 9),
        WFS_USRE_PTR_LAMPTHRESHOLD       = (PTR_SERVICE_OFFSET + 10),
        WFS_USRE_PTR_INKTHRESHOLD        = (PTR_SERVICE_OFFSET + 11),
        WFS_SRVE_PTR_MEDIADETECTED       = (PTR_SERVICE_OFFSET + 12),
        WFS_SRVE_PTR_RETRACTBINSTATUS    = (PTR_SERVICE_OFFSET + 13),
        WFS_EXEE_PTR_MEDIAPRESENTED      = (PTR_SERVICE_OFFSET + 14),
        WFS_SRVE_PTR_DEFINITIONLOADED    = (PTR_SERVICE_OFFSET + 15),
        WFS_EXEE_PTR_MEDIAREJECTED       = (PTR_SERVICE_OFFSET + 16),
        WFS_SRVE_PTR_MEDIAPRESENTED      = (PTR_SERVICE_OFFSET + 17),
        WFS_SRVE_PTR_MEDIAAUTORETRACTED  = (PTR_SERVICE_OFFSET + 18),
        WFS_SRVE_PTR_DEVICEPOSITION      = (PTR_SERVICE_OFFSET + 19),
        WFS_SRVE_PTR_POWER_SAVE_CHANGE   = (PTR_SERVICE_OFFSET + 20)
    }
}